"""
    聊天室设计
        1. 需求认知
            * 有人进入聊天室需要输入姓名，姓名不能重复
            * 有人进入聊天室时，其他人会收到通知：xxx 进入了聊天室
            * 一个人发消息，其他人会收到：xxx ： xxxxxxxxxxx
            * 有人退出聊天室，则其他人也会收到通知:xxx退出了聊天室
            * 扩展功能：服务器可以向所有用户发送公告:管理员消息： xxxxxxxxx

        2. 基本的技术分析
            * 网络传输  --> udp
            * 服务端需要存储用户名 -->  用户名  地址  [(name,address),]  {name:address}
            * 服务器给所有人发消息
            * 群发消息怎么发 --> 转发机制  (发送接收互不干扰,发送一个进程,接收一个进程)
            * 区分请求类型 --> 定协议

        3. 功能模块划分  (拆)
            函数封装
                * 架构模型搭建
                * 进入聊天室
                * 聊天
                * 退出聊天室

        4.  每一个功能的具体实现逻辑
            * 架构模型搭建
                客户端 : 创建udp套接字,准备给服务端发请求

                服务端 : 创建UDP套接字,等待客户端请求
                (可能接收到不同客户端请求,可能请求类型有很多种)

            a. 进入聊天室
                客户端：
                    1. 输入姓名
                    2. 将姓名发送给服务端
                    3. 等待接收服务端反馈

                服务端：
                    1. 接收客户端姓名
                    2. 判断用户是否存在
                    3. 将结果发送给客户端
                    4. 不能进入 --> 结束
                    5. 能进入 --> 存储用户信息, 通知其他客户端

            b. 聊天
                客户端：
                    1. 循环接收消息
                        子进程
                    2. 循环发送消息
                        父进程

                服务端：
                    1. 循环接收消息
                        开启线程
                        将消息放入消息队列
                    2. 循环发送消息
                        开启线程
                        从消息队列拿取消息
                        群发给客户端

            c. 退出聊天室
                客户端:
                    1. 向服务端发送退出消息
                服务端:
                    1. 接收客户端消息
                    2. 移除客户信息
                        通知其他客户

        5. 通信协议
            客户端请求类别:
                进入聊天室
                    L name

                聊天
                    C name message

                退出聊天室
                    Q name

"""
